name: Deploy Release

on:
  push:
    branches:
      - release

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set permission on gradlew
        run: chmod +x ./gradlew

      - name: Run Tests
        run: ./gradlew test

      - name: Build Project
        run: ./gradlew build

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: .

      - name: Send JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "*.jar"
          target: "/tmp/"

      - name: Check for JAR file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "=== Verificando JAR em /tmp ==="
            ls -la /tmp/*.jar 2>/dev/null || echo "Nenhum JAR encontrado em /tmp"

      - name: Create stop script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "#!/bin/bash" > ~/stop_app.sh
            echo "echo 'Parando aplicação Java...'" >> ~/stop_app.sh
            echo "for PID in \$(ps -ef | grep 'java -jar' | grep -v grep | awk '{print \$2}'); do" >> ~/stop_app.sh
            echo "  echo \"Encerrando processo \$PID\"" >> ~/stop_app.sh
            echo "  kill -15 \$PID || echo \"Falha ao encerrar \$PID\"" >> ~/stop_app.sh
            echo "done" >> ~/stop_app.sh
            echo "echo 'Parando concluído'" >> ~/stop_app.sh
            chmod +x ~/stop_app.sh

      - name: Execute stop script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ~/stop_app.sh

      - name: Deploy app on EC2
        uses: appleboy/ssh-action@master
        env:
          DEBUG: true
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "=== Buscando JAR ==="
            JAR_NAME=$(ls /tmp/*.jar 2>/dev/null | head -n1)
            
            if [ -z "$JAR_NAME" ]; then
              echo "ERRO: Nenhum arquivo JAR encontrado em /tmp"
              exit 1
            fi
            
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > ~/app.env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ~/app.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ~/app.env
            chmod 600 ~/app.env
            
            echo "JAR encontrado: $JAR_NAME"
            echo "DATABASE URL"
            echo $DATABASE_URL
            
            echo "=== Movendo JAR para ~/app.jar ==="
            cp "$JAR_NAME" ~/app.jar.new
            mv ~/app.jar.new ~/app.jar
            
            echo "=== Iniciando aplicação ==="
            cd ~
            set -a
            . ~/app.env
            set +a
  
            nohup java -jar app.jar > app.log 2>&1 &
            
            echo "Aplicação iniciada em background"
            
            # Verificar o status após inicialização
            sleep 4
            ps -ef | grep 'java -jar app.jar' | grep -v grep || echo "AVISO: Processo não encontrado após inicialização"